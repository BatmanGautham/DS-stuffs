#include <stdio.h>  

int i;

void swap(int *a, int *b) 
{
  int temp = *a;
  *a = *b;
  *b = temp;
}
  
void heapify(int A[], int n, int i) 
{
 int largest = i;
 int left = 2 * i + 1;
 int right = 2 * i + 2;
  
  if (left < n && A[left] > A[largest])
   {
     largest = left;
   }
  
  if (right < n && A[right] > A[largest])
   {
     largest = right;
   }
  

  if (largest != i) 
   {
     swap(&A[i], &A[largest]);
     heapify(A, n, largest);
   }
}
  
  
void heapSort(int A[], int n) 
{
   
  for (i= n/2 - 1;i >= 0; i--)
   {
     heapify(A, n, i);
   }
 
  for (i = n - 1; i >= 0; i--) 
   {
    swap(&A[0], &A[i]);

    heapify(A, i, 0);
   }
}
  

void printArray(int A[], int n) 
{
  for (i = 0; i < n; ++i)
   {
     printf("%d ", A[i]);
   }
 printf("\n");
}
  

int main() 
{
 int A[] = {1, 12, 9, 5, 6, 10};
 int n = sizeof(A) / sizeof(A[0]);
 
 printf("%d",n);
 
 printf("\nHeap Sort \n\nUnsorted array is \n");
 printArray(A,n);
  
  heapSort(A , n);
  
 printf("Sorted array is \n");
 printArray(A, n);
}
 
 
